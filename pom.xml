<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.psl</groupId>
	<artifactId>Sherlock</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>Sherlock</name>
	<url>http://maven.apache.org</url>

	<properties>
		<java.version>1.6</java.version>
		<spring.version>3.1.0.RELEASE</spring.version>
		<cglib.version>2.2.2</cglib.version>
	</properties>

	<dependencies>
		<!-- Spring core & mvc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>3.1.0.RELEASE</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>3.1.0.RELEASE</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<!-- CGLib for @Configuration -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib.version}</version>
			<scope>runtime</scope>
		</dependency>	
        

		<!-- Servlet Spec -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<!-- Spring core & mvc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>3.1.0.RELEASE</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>3.1.0.RELEASE</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<!-- CGLib for @Configuration -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib.version}</version>
			<scope>runtime</scope>
		</dependency>


		<!-- Servlet Spec -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
    		<groupId>org.hamcrest</groupId>
    		<artifactId>hamcrest-all</artifactId>
    		<version>1.3</version>
    		<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>
		<!-- <dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-tools</artifactId> 
			<version>4.3.1.Final</version> </dependency> -->

		<!-- Core utilities used by other modules. Define this if you use Spring 
			Utility APIs (org.springframework.core. */org.springframework.util.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<!-- Expression Language (depends on spring-core) Define this if you use 
			Spring Expression APIs (org.springframework.expression.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
			this if you use Spring Bean APIs (org.springframework.beans.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
			spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
			spring-beans) This is the central artifact for Spring's Dependency Injection 
			Container and is generally always defined -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<!-- Various Application Context utilities, including EhCache, JavaMail, 
			Quartz, and Freemarker integration Define this if you need any of these integrations -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
			spring- aop, spring-context) Define this if you use Spring Transactions or 
			DAO Exception Hierarchy (org.springframework.transaction. */org.springframework.dao.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring- 
			context, spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA and 
			iBatis. (depends on spring-core, spring-beans, spring- context, spring-tx) 
			Define this if you need ORM (org.springframework.orm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
			JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
			spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<!-- Web application development utilities applicable to both Servlet and 
			Portlet Environments (depends on spring-core, spring-beans, spring- context) 
			Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
			web framework with Spring (org.springframework.web.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
			spring- context, spring-web) Define this if you use Spring MVC with a Servlet 
			Container such as Apache Tomcat (org.springframework.web.servlet. *) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, 
			spring- context, spring-web) Define this if you use Spring MVC with a Portlet 
			Container (org.springframework.web.portlet.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc-portlet</artifactId>
			<version>3.1.0.RELEASE</version>
		</dependency>
		<!-- Support for testing Spring applications with tools such as JUnit and 
			TestNG This artifact is generally always defined with a 'test' scope for 
			the integration testing framework and unit testing stubs -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>3.1.0.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.6.11</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.6.11</version>
		</dependency>

		<!-- CGLib for @Configuration -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.0.7</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/javax.servlet/jstl -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>springsource-milestones</id>
			<name>SpringSource Milestones Proxy</name>
			<url>https://oss.sonatype.org/content/repositories/springsource-milestones</url>
		</repository>
	</repositories>
	<build>
		<finalName>Sherlock</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
	<profiles>
		<profile>
			<id>inQA</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete file="${project.build.outputDirectory}/env.is.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.is.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.is.qa.properties"/>
										
										<delete file="${project.build.outputDirectory}/env.us.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.us.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.us.qa.properties"/>

										<delete file="${project.build.outputDirectory}/env.properties"/>
										<delete file="${project.build.outputDirectory}/env.in.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.in.prod.properties"/>
																				
										<copy file="src/main/resources/env.in.qa.properties"
											tofile="${project.build.outputDirectory}/env.properties" />
											
										<delete file="${project.build.outputDirectory}/env.in.qa.properties"/>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
        				<artifactId>maven-war-plugin</artifactId>
        				<version>2.3</version>
        				<configuration>
        					<warName>Sherlock</warName>
        				</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>usQA</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete file="${project.build.outputDirectory}/env.in.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.in.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.in.qa.properties"/>
										
										<delete file="${project.build.outputDirectory}/env.is.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.is.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.is.qa.properties"/>
										
										<delete file="${project.build.outputDirectory}/env.properties"/>
										<delete file="${project.build.outputDirectory}/env.us.dev.properties"/>
										<delete file="${project.build.outputDirectory}/env.us.prod.properties"/>										
										<copy file="src/main/resources/env.us.qa.properties"
											tofile="${project.build.outputDirectory}/env.properties" />
											
										<delete file="${project.build.outputDirectory}/env.us.qa.properties"/>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
        				<artifactId>maven-war-plugin</artifactId>
        				<version>2.3</version>
        				<configuration>
        					<warName>Sherlock</warName>
        				</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>isQA</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete file="${project.build.outputDirectory}/env.in.dev.properties"/>
										<delete file="${project.build.outputDirectory}/env.in.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.in.qa.properties"/>
										
										<delete file="${project.build.outputDirectory}/env.us.dev.properties"/>
										<delete file="${project.build.outputDirectory}/env.us.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.us.qa.properties"/>

										<delete file="${project.build.outputDirectory}/env.properties"/>
										<delete file="${project.build.outputDirectory}/env.is.dev.properties"/>
										<delete file="${project.build.outputDirectory}/env.is.prod.properties"/>
										
										<copy file="src/main/resources/env.is.qa.properties"
											tofile="${project.build.outputDirectory}/env.properties" />
											
										<delete file="${project.build.outputDirectory}/env.is.qa.properties"/>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
        				<artifactId>maven-war-plugin</artifactId>
        				<version>2.3</version>
        				<configuration>
        					<warName>Sherlock</warName>
        				</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
			<profile>
			<id>inST</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete file="${project.build.outputDirectory}/env.is.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.is.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.is.qa.properties"/>
										
										<delete file="${project.build.outputDirectory}/env.us.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.us.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.us.qa.properties"/>

										<delete file="${project.build.outputDirectory}/env.properties"/>
										<delete file="${project.build.outputDirectory}/env.in.qa.properties"/>
										<delete file="${project.build.outputDirectory}/env.in.prod.properties"/>										
										<copy file="src/main/resources/env.in.stage.properties"
											tofile="${project.build.outputDirectory}/env.properties" />
											
										<delete file="${project.build.outputDirectory}/env.in.stage.properties"/>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
        				<artifactId>maven-war-plugin</artifactId>
        				<version>2.3</version>
        				<configuration>
        					<warName>Sherlock</warName>
        				</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>usST</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
									<delete file="${project.build.outputDirectory}/env.in.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.in.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.in.qa.properties"/>
										
										<delete file="${project.build.outputDirectory}/env.is.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.is.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.is.qa.properties"/>
										
										
										<delete file="${project.build.outputDirectory}/env.properties"/>
										<delete file="${project.build.outputDirectory}/env.us.qa.properties"/>
										<delete file="${project.build.outputDirectory}/env.us.prod.properties"/>										
										<copy file="src/main/resources/env.us.stage.properties"
											tofile="${project.build.outputDirectory}/env.properties" />
											
										<delete file="${project.build.outputDirectory}/env.us.stage.properties"/>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
        				<artifactId>maven-war-plugin</artifactId>
        				<version>2.3</version>
        				<configuration>
        					<warName>Sherlock</warName>
        				</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>isST</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete file="${project.build.outputDirectory}/env.in.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.in.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.in.qa.properties"/>
										
										<delete file="${project.build.outputDirectory}/env.us.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.us.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.us.qa.properties"/>
										
										<delete file="${project.build.outputDirectory}/env.properties"/>
										<delete file="${project.build.outputDirectory}/env.is.qa.properties"/>
										<delete file="${project.build.outputDirectory}/env.is.prod.properties"/>										
										<copy file="src/main/resources/env.is.stage.properties"
											tofile="${project.build.outputDirectory}/env.properties" />
											
										<delete file="${project.build.outputDirectory}/env.is.stage.properties"/>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
        				<artifactId>maven-war-plugin</artifactId>
        				<version>2.3</version>
        				<configuration>
        					<warName>Sherlock</warName>
        				</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	
			<profile>
			<id>inProd</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete file="${project.build.outputDirectory}/env.is.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.is.prod.properties"/>										
										<delete file="${project.build.outputDirectory}env.is.qa.properties"/>
										
										<delete file="${project.build.outputDirectory}/env.us.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.us.prod.properties"/>										
										<delete file="${project.build.outputDirectory}env.us.qa.properties"/>
									
										<delete file="${project.build.outputDirectory}/env.properties"/>
										<delete file="${project.build.outputDirectory}/env.in.qa.properties"/>
										<delete file="${project.build.outputDirectory}/env.in.stage.properties"/>										
										<copy file="src/main/resources/env.in.prod.properties"
											tofile="${project.build.outputDirectory}/env.properties" />
											
										<delete file="${project.build.outputDirectory}/env.in.prod.properties"/>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
        				<artifactId>maven-war-plugin</artifactId>
        				<version>2.3</version>
        				<configuration>
        					<warName>Sherlock</warName>
        				</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>usProd</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete file="${project.build.outputDirectory}/env.in.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.in.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.in.qa.properties"/>
										
										<delete file="${project.build.outputDirectory}/env.is.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.is.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.is.qa.properties"/>
									
									
										<delete file="${project.build.outputDirectory}/env.properties"/>
										<delete file="${project.build.outputDirectory}/env.us.qa.properties"/>
										<delete file="${project.build.outputDirectory}/env.us.stage.properties"/>										
										<copy file="src/main/resources/env.us.prod.properties"
											tofile="${project.build.outputDirectory}/env.properties" />
											
										<delete file="${project.build.outputDirectory}/env.us.prod.properties"/>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
        				<artifactId>maven-war-plugin</artifactId>
        				<version>2.3</version>
        				<configuration>
        					<warName>Sherlock</warName>
        				</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<id>isProd</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete file="${project.build.outputDirectory}/env.in.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.in.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.in.qa.properties"/>
										
										<delete file="${project.build.outputDirectory}/env.us.stage.properties"/>
										<delete file="${project.build.outputDirectory}/env.us.prod.properties"/>										
										<delete file="${project.build.outputDirectory}/env.us.qa.properties"/>
									
									
										<delete file="${project.build.outputDirectory}/env.properties"/>
										<delete file="${project.build.outputDirectory}/env.is.qa.properties"/>
										<delete file="${project.build.outputDirectory}/env.is.stage.properties"/>										
										<copy file="src/main/resources/env.is.prod.properties"
											tofile="${project.build.outputDirectory}/env.properties" />
											
										<delete file="${project.build.outputDirectory}/env.is.prod.properties"/>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
        				<artifactId>maven-war-plugin</artifactId>
        				<version>2.3</version>
        				<configuration>
        					<warName>Sherlock</warName>
        				</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	
	
	
	
	</profiles>
	
	
</project>